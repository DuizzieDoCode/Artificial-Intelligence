{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"TSP","provenance":[],"authorship_tag":"ABX9TyPYQ6eg9akzCK+kN/x4dgz0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install python-tsp"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"udNANpezglzY","executionInfo":{"status":"ok","timestamp":1650903404700,"user_tz":-330,"elapsed":4747,"user":{"displayName":"201951135 SANJEEV MISHRA","userId":"15326506275886441974"}},"outputId":"12e043a5-f86c-4ad4-b947-e1e2f1c84382"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting python-tsp\n","  Downloading python_tsp-0.2.1-py3-none-any.whl (14 kB)\n","Collecting tsplib95<0.8.0,>=0.7.1\n","  Downloading tsplib95-0.7.1-py2.py3-none-any.whl (25 kB)\n","Requirement already satisfied: numpy<2.0.0,>=1.18.5 in /usr/local/lib/python3.7/dist-packages (from python-tsp) (1.21.6)\n","Requirement already satisfied: networkx~=2.1 in /usr/local/lib/python3.7/dist-packages (from tsplib95<0.8.0,>=0.7.1->python-tsp) (2.6.3)\n","Requirement already satisfied: tabulate~=0.8.7 in /usr/local/lib/python3.7/dist-packages (from tsplib95<0.8.0,>=0.7.1->python-tsp) (0.8.9)\n","Collecting Deprecated~=1.2.9\n","  Downloading Deprecated-1.2.13-py2.py3-none-any.whl (9.6 kB)\n","Requirement already satisfied: Click>=6.0 in /usr/local/lib/python3.7/dist-packages (from tsplib95<0.8.0,>=0.7.1->python-tsp) (7.1.2)\n","Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.7/dist-packages (from Deprecated~=1.2.9->tsplib95<0.8.0,>=0.7.1->python-tsp) (1.14.0)\n","Installing collected packages: Deprecated, tsplib95, python-tsp\n","Successfully installed Deprecated-1.2.13 python-tsp-0.2.1 tsplib95-0.7.1\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V_TK-CPOftXx","executionInfo":{"status":"ok","timestamp":1650903424860,"user_tz":-330,"elapsed":373,"user":{"displayName":"201951135 SANJEEV MISHRA","userId":"15326506275886441974"}},"outputId":"ae4e5df0-ddff-433c-b4fc-390f0f87535c"},"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 1, 3, 2]\n","17\n"]}],"source":["import numpy as np\n","from python_tsp.exact import solve_tsp_dynamic_programming\n","\n","distance_matrix = np.array([\n","    [0,  5, 4, 10],\n","    [5,  0, 8,  5],\n","    [4,  8, 0,  3],\n","    [10, 5, 3,  0]\n","])\n","permutation, distance = solve_tsp_dynamic_programming(distance_matrix)\n","print(permutation)\n","print(distance)"]},{"cell_type":"code","source":["from python_tsp.heuristics import solve_tsp_local_search\n","\n","permutation, distance = solve_tsp_local_search(distance_matrix)\n","print(permutation)\n","print(distance)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FdjcwVVogtfW","executionInfo":{"status":"ok","timestamp":1650903462616,"user_tz":-330,"elapsed":2,"user":{"displayName":"201951135 SANJEEV MISHRA","userId":"15326506275886441974"}},"outputId":"4d2f265d-6f4b-4876-d09a-727f65b91642"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 2, 3, 1]\n","17\n"]}]},{"cell_type":"code","source":["import numpy as np\n","from python_tsp.distances import great_circle_distance_matrix\n","\n","sources = np.array([\n","    [ 40.73024833, -73.79440675],\n","    [ 41.47362495, -73.92783272],\n","    [ 41.26591   , -73.21026228],\n","    [ 41.3249908 , -73.507788  ]\n","])\n","distance_matrix = great_circle_distance_matrix(sources)\n","print(distance_matrix)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6qN8rlc5g69J","executionInfo":{"status":"ok","timestamp":1650903501065,"user_tz":-330,"elapsed":4,"user":{"displayName":"201951135 SANJEEV MISHRA","userId":"15326506275886441974"}},"outputId":"045594bb-7924-4d37-fed0-6c4301b007b9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[    0.         83412.28094239 77142.07147679 70367.12292362]\n"," [83412.28094239     0.         64179.17361563 38738.20815876]\n"," [77142.07147679 64179.17361563     0.         25709.56028503]\n"," [70367.12292362 38738.20815876 25709.56028503     0.        ]]\n"]}]},{"cell_type":"markdown","source":["#BRUTE FORCE METHODS"],"metadata":{"id":"QLQomkasB11o"}},{"cell_type":"markdown","source":["Depth first search"],"metadata":{"id":"Y1Sf_g8BDHA9"}},{"cell_type":"code","source":["V = 4\n","answer = []\n","\n","def tsp(graph, v, currPos, n, count, cost):\n","\n","    if (count == n and graph[currPos][0]):\n","        answer.append(cost + graph[currPos][0])\n","        return\n","\n","    for i in range(n):\n","        if (v[i] == False and graph[currPos][i]):\n","             \n","            # Mark as visited\n","            v[i] = True\n","            tsp(graph, v, i, n, count + 1,\n","                cost + graph[currPos][i])\n","             \n","            # Mark ith node as unvisited\n","            v[i] = False\n","\n"," \n","# n is the number of nodes i.e. V\n","if __name__ == '__main__':\n","    n = 4\n","    graph= [[ 0, 10, 15, 20 ],\n","            [ 10, 0, 35, 25 ],\n","            [ 15, 35, 0, 30 ],\n","            [ 20, 25, 30, 0 ]]\n"," \n","    # Boolean array to check if a node\n","    # has been visited or not\n","    v = [False for i in range(n)]\n","     \n","    # Mark 0th node as visited\n","    v[0] = True\n"," \n","    # Find the minimum weight Hamiltonian Cycle\n","    tsp(graph, v, 0, n, 1, 0)\n"," \n","    # ans is the minimum weight Hamiltonian Cycle\n","    print(min(answer))"],"metadata":{"id":"I27HQ2NHhEOC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650945830799,"user_tz":-330,"elapsed":17,"user":{"displayName":"201951135 SANJEEV MISHRA","userId":"15326506275886441974"}},"outputId":"c24599eb-75f7-4a2a-fef7-f613155653d2"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["80\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"SEyc--MkCd1t"},"execution_count":null,"outputs":[]}]}